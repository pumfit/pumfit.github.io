I"<blockquote>
  <p>유니티 쉐이더 스타트업 책을 기반으로 정리한 포스트입니다.</p>
</blockquote>

<h2 id="쉐이더란">쉐이더란?</h2>

<blockquote>
  <p>3D 그래픽에서 최종적으로 화면에 출력되는 픽셀의 색상(채도,밝기 등)을 정하는 함수</p>
</blockquote>

<h2 id="렌더링-파이프라인">렌더링 파이프라인</h2>

<p>렌더링 파이프라인이란 화면에 보여지는 렌더링이 이루어지는 단계를 의미한다.</p>

<p><img src="/assets/img/post/graphics/01pipeline.png" alt="img-graphicspipeline" /></p>

<p><strong>The graphics pipeline in OpenGL consists of these 5 step</strong></p>

<p>일반적인 렌더링 파이프라인은 <code class="language-plaintext highlighter-rouge">1. 오브젝트 데이터 받아고 2. 버텍스 쉐이더 3. 래스터라이저 4. 픽셀쉐이더,프레그먼트 쉐이더</code> 단계를 거친다.</p>

<p>1️⃣ <strong>오브젝트 데이터 받아오기</strong></p>

<p>그래픽카드는 <strong>버텍스(Vertex,정점)</strong> 로 이루어진 물체의 데이터값을 받아온다. 이때 버텍스안에는 인덱스 넘버, 포지션, 노멀, 컬러 값등의 정보가 포함되어 있다.</p>

<p>그래픽카드에서는 이 버텍스의 정보를 가지고 버텍스로 이루어진 삼각형 면을 생성해 버텍스(정점) 쉐이더로 넘긴다.</p>

<p>2️⃣ <strong>버텍스 쉐이더</strong></p>

<p>버텍스 쉐이더는 버텍스 데이터를 이용해 <strong>좌표 변환</strong>을 진행한다.</p>

<p><img src="/assets/img/post/graphics/01transformation.png" alt="img-graphicspipeline" /></p>

<ul>
  <li><strong>로컬 좌표계</strong>
    <ul>
      <li>모든 오브젝트들이 자기가 세상의 중심인 상태로 자신의 중심이 (0,0,0)가 된다. (In Unity Object coordinate system)</li>
    </ul>
  </li>
  <li><strong>월드 좌표계</strong>
    <ul>
      <li>절대 좌표인 월드 좌표계의 위치로부터 각 물체의 상대적인 위치 값 월드 좌표계에서 실제 월드의 중심은 0,0,0이며 다른 물체들은 여기서 얼마나 떨어져 있는 지로 표현된다.</li>
    </ul>
  </li>
  <li>
    <p><strong>카메라 좌표계</strong></p>

    <p><strong>1.  Orthographic Projection</strong></p>

    <ul>
      <li>월드 좌표계의 버텍스들을 <strong>카메라 행렬</strong> 로 곱해서 월드 좌표계의 오브젝트들이 카메라 중심점으로 부터의 상대적 거리로 다시 연산된다. (물체를 화면에서 볼 수 있으나 원근감은 없음)</li>
    </ul>

    <p><strong>2.  Perspective Projection</strong></p>

    <ul>
      <li>카메라 행렬로 정렬된 버텍스들을 <strong>프로젝션 행렬</strong>로 곱해져 원근감을 부여한다. 카메라에서 먼 곳은 좁혀진 것 처럼 버텍스 위치를 조정한다.</li>
    </ul>
  </li>
</ul>

<p>여기까지 진행된 오브젝트는 아직 픽셀 쉐이더를 거치지 않았기 때문에 모니터에서는 볼 수 없는 3D 공간에 존재하는 오브젝트일 뿐이다.</p>

<p>3️⃣ <strong>레스터라이저</strong></p>

<p>레스터라이저란, 오브젝트가 모니터에서 표현될 때 어느 픽셀로 표현될 것인지 나타내는 것을 의미한다.</p>

<p>즉 3D 오브젝트가 모니터에 보이도록 픽셀화(래스터화)하는 과정을 의미한다.</p>

<p>4️⃣ <strong>픽셀쉐이더(Pixel Shader) / 프래그먼트쉐이더(Fragment Shader)</strong></p>

<p>픽셀쉐이더가 가동되면서 조명과 텍스처, 그림자와 각종 특수효과등을 연산하게된다.</p>

<h2 id="other">Other</h2>
<ul>
  <li>GLSL 쉐이더 관련 서적 번역본
<strong><a href="https://thebookofshaders.com/?lan=kr">The Book of Shaders</a></strong> by  Patricio Gonzalez Vivo</li>
</ul>

:ET